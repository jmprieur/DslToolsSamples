//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using DslModeling = global::Microsoft.VisualStudio.Modeling;
using DslDesign = global::Microsoft.VisualStudio.Modeling.Design;
namespace Company.DoubleClickOnShape
{
	/// <summary>
	/// DomainRelationship ExampleModelHasElements
	/// Embedding relationship between the Model and Elements
	/// </summary>
	[DslDesign::DisplayNameResource("Company.DoubleClickOnShape.ExampleModelHasElements.DisplayName", typeof(global::Company.DoubleClickOnShape.DoubleClickOnShapeDomainModel), "Company.DoubleClickOnShape.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("Company.DoubleClickOnShape.ExampleModelHasElements.Description", typeof(global::Company.DoubleClickOnShape.DoubleClickOnShapeDomainModel), "Company.DoubleClickOnShape.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::Company.DoubleClickOnShape.DoubleClickOnShapeDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainRelationship(IsEmbedding=true)]
	[DslModeling::DomainObjectId("ad231e3e-1727-47ac-84b1-76e9ef2e6b0f")]
	public partial class ExampleModelHasElements : DslModeling::ElementLink
	{
		#region Constructors, domain class Id
		
		/// <summary>
		/// ExampleModelHasElements domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0xad231e3e, 0x1727, 0x47ac, 0x84, 0xb1, 0x76, 0xe9, 0xef, 0x2e, 0x6b, 0x0f);
	
				
		/// <summary>
		/// Constructor
		/// Creates a ExampleModelHasElements link in the same Partition as the given ExampleModel
		/// </summary>
		/// <param name="source">ExampleModel to use as the source of the relationship.</param>
		/// <param name="target">ExampleElement to use as the target of the relationship.</param>
		public ExampleModelHasElements(ExampleModel source, ExampleElement target)
			: base((source != null ? source.Partition : null), new DslModeling::RoleAssignment[]{new DslModeling::RoleAssignment(ExampleModelHasElements.ExampleModelDomainRoleId, source), new DslModeling::RoleAssignment(ExampleModelHasElements.ElementDomainRoleId, target)}, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public ExampleModelHasElements(DslModeling::Store store, params DslModeling::RoleAssignment[] roleAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public ExampleModelHasElements(DslModeling::Store store, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public ExampleModelHasElements(DslModeling::Partition partition, params DslModeling::RoleAssignment[] roleAssignments)
			: base(partition, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public ExampleModelHasElements(DslModeling::Partition partition, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, roleAssignments, propertyAssignments)
		{
		}
		#endregion
		#region ExampleModel domain role code
		
		/// <summary>
		/// ExampleModel domain role Id.
		/// </summary>
		public static readonly global::System.Guid ExampleModelDomainRoleId = new global::System.Guid(0x2869954c, 0xbf83, 0x402c, 0x9c, 0x2b, 0x08, 0x13, 0xfb, 0x7e, 0x6a, 0x0b);
		
		/// <summary>
		/// DomainRole ExampleModel
		/// </summary>
		[DslDesign::DisplayNameResource("Company.DoubleClickOnShape.ExampleModelHasElements/ExampleModel.DisplayName", typeof(global::Company.DoubleClickOnShape.DoubleClickOnShapeDomainModel), "Company.DoubleClickOnShape.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Company.DoubleClickOnShape.ExampleModelHasElements/ExampleModel.Description", typeof(global::Company.DoubleClickOnShape.DoubleClickOnShapeDomainModel), "Company.DoubleClickOnShape.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Source, PropertyName = "Elements", PropertyDisplayNameKey="Company.DoubleClickOnShape.ExampleModelHasElements/ExampleModel.PropertyDisplayName",  PropagatesCopy = DslModeling::PropagatesCopyOption.PropagatesCopyToLinkAndOppositeRolePlayer, Multiplicity = DslModeling::Multiplicity.ZeroMany)]
		[DslModeling::DomainObjectId("2869954c-bf83-402c-9c2b-0813fb7e6a0b")]
		public virtual ExampleModel ExampleModel
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (ExampleModel)DslModeling::DomainRoleInfo.GetRolePlayer(this, ExampleModelDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, ExampleModelDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access ExampleModel of a ExampleElement
		/// <summary>
		/// Gets ExampleModel.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static ExampleModel GetExampleModel(ExampleElement element)
		{
			return DslModeling::DomainRoleInfo.GetLinkedElement(element, ElementDomainRoleId) as ExampleModel;
		}
		
		/// <summary>
		/// Sets ExampleModel.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static void SetExampleModel(ExampleElement element, ExampleModel newExampleModel)
		{
			DslModeling::DomainRoleInfo.SetLinkedElement(element, ElementDomainRoleId, newExampleModel);
		}
		#endregion
		#region Element domain role code
		
		/// <summary>
		/// Element domain role Id.
		/// </summary>
		public static readonly global::System.Guid ElementDomainRoleId = new global::System.Guid(0xb2bee609, 0x4c6b, 0x4bd3, 0x91, 0xf2, 0xf4, 0xc6, 0xda, 0xba, 0x02, 0x50);
		
		/// <summary>
		/// DomainRole Element
		/// </summary>
		[DslDesign::DisplayNameResource("Company.DoubleClickOnShape.ExampleModelHasElements/Element.DisplayName", typeof(global::Company.DoubleClickOnShape.DoubleClickOnShapeDomainModel), "Company.DoubleClickOnShape.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Company.DoubleClickOnShape.ExampleModelHasElements/Element.Description", typeof(global::Company.DoubleClickOnShape.DoubleClickOnShapeDomainModel), "Company.DoubleClickOnShape.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Target, PropertyName = "ExampleModel", PropertyDisplayNameKey="Company.DoubleClickOnShape.ExampleModelHasElements/Element.PropertyDisplayName", PropagatesDelete = true,  PropagatesCopy = DslModeling::PropagatesCopyOption.DoNotPropagateCopy, Multiplicity = DslModeling::Multiplicity.One)]
		[DslModeling::DomainObjectId("b2bee609-4c6b-4bd3-91f2-f4c6daba0250")]
		public virtual ExampleElement Element
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (ExampleElement)DslModeling::DomainRoleInfo.GetRolePlayer(this, ElementDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, ElementDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access Elements of a ExampleModel
		/// <summary>
		/// Gets a list of Elements.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static DslModeling::LinkedElementCollection<ExampleElement> GetElements(ExampleModel element)
		{
			return GetRoleCollection<DslModeling::LinkedElementCollection<ExampleElement>, ExampleElement>(element, ExampleModelDomainRoleId);
		}
		#endregion
		#region ExampleModel link accessor
		/// <summary>
		/// Get the list of ExampleModelHasElements links to a ExampleModel.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::Company.DoubleClickOnShape.ExampleModelHasElements> GetLinksToElements ( global::Company.DoubleClickOnShape.ExampleModel exampleModelInstance )
		{
			return DslModeling::DomainRoleInfo.GetElementLinks<global::Company.DoubleClickOnShape.ExampleModelHasElements>(exampleModelInstance, global::Company.DoubleClickOnShape.ExampleModelHasElements.ExampleModelDomainRoleId);
		}
		#endregion
		#region Element link accessor
		/// <summary>
		/// Get the ExampleModelHasElements link to a ExampleElement.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::Company.DoubleClickOnShape.ExampleModelHasElements GetLinkToExampleModel (global::Company.DoubleClickOnShape.ExampleElement elementInstance)
		{
			global::System.Collections.Generic.IList<global::Company.DoubleClickOnShape.ExampleModelHasElements> links = DslModeling::DomainRoleInfo.GetElementLinks<global::Company.DoubleClickOnShape.ExampleModelHasElements>(elementInstance, global::Company.DoubleClickOnShape.ExampleModelHasElements.ElementDomainRoleId);
			global::System.Diagnostics.Debug.Assert(links.Count <= 1, "Multiplicity of Element not obeyed.");
			if ( links.Count == 0 )
			{
				return null;
			}
			else
			{
				return links[0];
			}
		}
		#endregion
		#region ExampleModelHasElements instance accessors
		
		/// <summary>
		/// Get any ExampleModelHasElements links between a given ExampleModel and a ExampleElement.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::Company.DoubleClickOnShape.ExampleModelHasElements> GetLinks( global::Company.DoubleClickOnShape.ExampleModel source, global::Company.DoubleClickOnShape.ExampleElement target )
		{
			global::System.Collections.Generic.List<global::Company.DoubleClickOnShape.ExampleModelHasElements> outLinks = new global::System.Collections.Generic.List<global::Company.DoubleClickOnShape.ExampleModelHasElements>();
			global::System.Collections.Generic.IList<global::Company.DoubleClickOnShape.ExampleModelHasElements> links = DslModeling::DomainRoleInfo.GetElementLinks<global::Company.DoubleClickOnShape.ExampleModelHasElements>(source, global::Company.DoubleClickOnShape.ExampleModelHasElements.ExampleModelDomainRoleId);
			foreach ( global::Company.DoubleClickOnShape.ExampleModelHasElements link in links )
			{
				if ( target.Equals(link.Element) )
				{
					outLinks.Add(link);
				}
			}
			return outLinks.AsReadOnly();
		}
		/// <summary>
		/// Get the one ExampleModelHasElements link between a given ExampleModeland a ExampleElement.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::Company.DoubleClickOnShape.ExampleModelHasElements GetLink( global::Company.DoubleClickOnShape.ExampleModel source, global::Company.DoubleClickOnShape.ExampleElement target )
		{
			global::System.Collections.Generic.IList<global::Company.DoubleClickOnShape.ExampleModelHasElements> links = DslModeling::DomainRoleInfo.GetElementLinks<global::Company.DoubleClickOnShape.ExampleModelHasElements>(source, global::Company.DoubleClickOnShape.ExampleModelHasElements.ExampleModelDomainRoleId);
			foreach ( global::Company.DoubleClickOnShape.ExampleModelHasElements link in links )
			{
				if ( target.Equals(link.Element) )
				{
					return link;
				}
			}
			return null;
		}
		
		#endregion
	}
}
namespace Company.DoubleClickOnShape
{
	/// <summary>
	/// DomainRelationship ExampleElementReferencesTargets
	/// Reference relationship between Elements.
	/// </summary>
	[DslDesign::DisplayNameResource("Company.DoubleClickOnShape.ExampleElementReferencesTargets.DisplayName", typeof(global::Company.DoubleClickOnShape.DoubleClickOnShapeDomainModel), "Company.DoubleClickOnShape.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("Company.DoubleClickOnShape.ExampleElementReferencesTargets.Description", typeof(global::Company.DoubleClickOnShape.DoubleClickOnShapeDomainModel), "Company.DoubleClickOnShape.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::Company.DoubleClickOnShape.DoubleClickOnShapeDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainRelationship()]
	[DslModeling::DomainObjectId("3d7e9dd4-338c-4a4f-bc06-b54deb52b0df")]
	public partial class ExampleElementReferencesTargets : DslModeling::ElementLink
	{
		#region Constructors, domain class Id
		
		/// <summary>
		/// ExampleElementReferencesTargets domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x3d7e9dd4, 0x338c, 0x4a4f, 0xbc, 0x06, 0xb5, 0x4d, 0xeb, 0x52, 0xb0, 0xdf);
	
				
		/// <summary>
		/// Constructor
		/// Creates a ExampleElementReferencesTargets link in the same Partition as the given ExampleElement
		/// </summary>
		/// <param name="source">ExampleElement to use as the source of the relationship.</param>
		/// <param name="target">ExampleElement to use as the target of the relationship.</param>
		public ExampleElementReferencesTargets(ExampleElement source, ExampleElement target)
			: base((source != null ? source.Partition : null), new DslModeling::RoleAssignment[]{new DslModeling::RoleAssignment(ExampleElementReferencesTargets.SourceDomainRoleId, source), new DslModeling::RoleAssignment(ExampleElementReferencesTargets.TargetDomainRoleId, target)}, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public ExampleElementReferencesTargets(DslModeling::Store store, params DslModeling::RoleAssignment[] roleAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public ExampleElementReferencesTargets(DslModeling::Store store, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public ExampleElementReferencesTargets(DslModeling::Partition partition, params DslModeling::RoleAssignment[] roleAssignments)
			: base(partition, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public ExampleElementReferencesTargets(DslModeling::Partition partition, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, roleAssignments, propertyAssignments)
		{
		}
		#endregion
		#region Source domain role code
		
		/// <summary>
		/// Source domain role Id.
		/// </summary>
		public static readonly global::System.Guid SourceDomainRoleId = new global::System.Guid(0x853827a6, 0xfefb, 0x4eec, 0xa4, 0x10, 0x1f, 0xef, 0xed, 0xf2, 0xc3, 0x42);
		
		/// <summary>
		/// DomainRole Source
		/// Description for Company.DoubleClickOnShape.ExampleRelationship.Target
		/// </summary>
		[DslDesign::DisplayNameResource("Company.DoubleClickOnShape.ExampleElementReferencesTargets/Source.DisplayName", typeof(global::Company.DoubleClickOnShape.DoubleClickOnShapeDomainModel), "Company.DoubleClickOnShape.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Company.DoubleClickOnShape.ExampleElementReferencesTargets/Source.Description", typeof(global::Company.DoubleClickOnShape.DoubleClickOnShapeDomainModel), "Company.DoubleClickOnShape.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Source, PropertyName = "Targets", PropertyDisplayNameKey="Company.DoubleClickOnShape.ExampleElementReferencesTargets/Source.PropertyDisplayName",  PropagatesCopy = DslModeling::PropagatesCopyOption.DoNotPropagateCopy, Multiplicity = DslModeling::Multiplicity.ZeroMany)]
		[DslModeling::DomainObjectId("853827a6-fefb-4eec-a410-1fefedf2c342")]
		public virtual ExampleElement Source
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (ExampleElement)DslModeling::DomainRoleInfo.GetRolePlayer(this, SourceDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, SourceDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access Sources of a ExampleElement
		/// <summary>
		/// Gets a list of Sources.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static DslModeling::LinkedElementCollection<ExampleElement> GetSources(ExampleElement element)
		{
			return GetRoleCollection<DslModeling::LinkedElementCollection<ExampleElement>, ExampleElement>(element, TargetDomainRoleId);
		}
		#endregion
		#region Target domain role code
		
		/// <summary>
		/// Target domain role Id.
		/// </summary>
		public static readonly global::System.Guid TargetDomainRoleId = new global::System.Guid(0x0b2c3fc5, 0xba2a, 0x4ba4, 0x93, 0xdf, 0xf3, 0xcc, 0x60, 0x0d, 0x78, 0x3c);
		
		/// <summary>
		/// DomainRole Target
		/// Description for Company.DoubleClickOnShape.ExampleRelationship.Source
		/// </summary>
		[DslDesign::DisplayNameResource("Company.DoubleClickOnShape.ExampleElementReferencesTargets/Target.DisplayName", typeof(global::Company.DoubleClickOnShape.DoubleClickOnShapeDomainModel), "Company.DoubleClickOnShape.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Company.DoubleClickOnShape.ExampleElementReferencesTargets/Target.Description", typeof(global::Company.DoubleClickOnShape.DoubleClickOnShapeDomainModel), "Company.DoubleClickOnShape.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Target, PropertyName = "Sources", PropertyDisplayNameKey="Company.DoubleClickOnShape.ExampleElementReferencesTargets/Target.PropertyDisplayName",  PropagatesCopy = DslModeling::PropagatesCopyOption.DoNotPropagateCopy, Multiplicity = DslModeling::Multiplicity.ZeroMany)]
		[DslModeling::DomainObjectId("0b2c3fc5-ba2a-4ba4-93df-f3cc600d783c")]
		public virtual ExampleElement Target
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (ExampleElement)DslModeling::DomainRoleInfo.GetRolePlayer(this, TargetDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, TargetDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access Targets of a ExampleElement
		/// <summary>
		/// Gets a list of Targets.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static DslModeling::LinkedElementCollection<ExampleElement> GetTargets(ExampleElement element)
		{
			return GetRoleCollection<DslModeling::LinkedElementCollection<ExampleElement>, ExampleElement>(element, SourceDomainRoleId);
		}
		#endregion
		#region Source link accessor
		/// <summary>
		/// Get the list of ExampleElementReferencesTargets links to a ExampleElement.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::Company.DoubleClickOnShape.ExampleElementReferencesTargets> GetLinksToTargets ( global::Company.DoubleClickOnShape.ExampleElement sourceInstance )
		{
			return DslModeling::DomainRoleInfo.GetElementLinks<global::Company.DoubleClickOnShape.ExampleElementReferencesTargets>(sourceInstance, global::Company.DoubleClickOnShape.ExampleElementReferencesTargets.SourceDomainRoleId);
		}
		#endregion
		#region Target link accessor
		/// <summary>
		/// Get the list of ExampleElementReferencesTargets links to a ExampleElement.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::Company.DoubleClickOnShape.ExampleElementReferencesTargets> GetLinksToSources ( global::Company.DoubleClickOnShape.ExampleElement targetInstance )
		{
			return DslModeling::DomainRoleInfo.GetElementLinks<global::Company.DoubleClickOnShape.ExampleElementReferencesTargets>(targetInstance, global::Company.DoubleClickOnShape.ExampleElementReferencesTargets.TargetDomainRoleId);
		}
		#endregion
		#region ExampleElementReferencesTargets instance accessors
		
		/// <summary>
		/// Get any ExampleElementReferencesTargets links between a given ExampleElement and a ExampleElement.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::Company.DoubleClickOnShape.ExampleElementReferencesTargets> GetLinks( global::Company.DoubleClickOnShape.ExampleElement source, global::Company.DoubleClickOnShape.ExampleElement target )
		{
			global::System.Collections.Generic.List<global::Company.DoubleClickOnShape.ExampleElementReferencesTargets> outLinks = new global::System.Collections.Generic.List<global::Company.DoubleClickOnShape.ExampleElementReferencesTargets>();
			global::System.Collections.Generic.IList<global::Company.DoubleClickOnShape.ExampleElementReferencesTargets> links = DslModeling::DomainRoleInfo.GetElementLinks<global::Company.DoubleClickOnShape.ExampleElementReferencesTargets>(source, global::Company.DoubleClickOnShape.ExampleElementReferencesTargets.SourceDomainRoleId);
			foreach ( global::Company.DoubleClickOnShape.ExampleElementReferencesTargets link in links )
			{
				if ( target.Equals(link.Target) )
				{
					outLinks.Add(link);
				}
			}
			return outLinks.AsReadOnly();
		}
		/// <summary>
		/// Get the one ExampleElementReferencesTargets link between a given ExampleElementand a ExampleElement.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::Company.DoubleClickOnShape.ExampleElementReferencesTargets GetLink( global::Company.DoubleClickOnShape.ExampleElement source, global::Company.DoubleClickOnShape.ExampleElement target )
		{
			global::System.Collections.Generic.IList<global::Company.DoubleClickOnShape.ExampleElementReferencesTargets> links = DslModeling::DomainRoleInfo.GetElementLinks<global::Company.DoubleClickOnShape.ExampleElementReferencesTargets>(source, global::Company.DoubleClickOnShape.ExampleElementReferencesTargets.SourceDomainRoleId);
			foreach ( global::Company.DoubleClickOnShape.ExampleElementReferencesTargets link in links )
			{
				if ( target.Equals(link.Target) )
				{
					return link;
				}
			}
			return null;
		}
		
		#endregion
	}
}
